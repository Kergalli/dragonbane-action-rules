{
  "DRAGONBANE_ACTION_RULES": {
    "console": {
      "initializing": "Initializing",
      "wrongSystem": "This module is designed for the Dragonbane system",
      "moduleEnabled": "Module enabled",
      "moduleDisabled": "Module disabled"
    },
    "settings": {
      "enabled": {
        "name": "Enable Combat Assistant",
        "hint": "Master toggle - disables all Combat Assistant features when turned off (validation, rules, encumbrance, etc.)"
      },
      "delay": {
        "name": "Display Delay (milliseconds)",
        "hint": "How long to wait before showing rules after an action is detected"
      },
      "showParryDurability": {
        "name": "Show Weapon Durability for Parry",
        "hint": "Display weapon durability when showing parry rules (shows the damage threshold that would break the weapon)"
      },
      "enableParryMovementReminders": {
        "name": "OPTIONAL RULE: Enable Parry Movement Reminders",
        "hint": "Show the optional parry movement rule (move yourself and enemy 2m on successful parry)"
      },
      "enforceTargetSelection": {
        "name": "Enforce Target Selection",
        "hint": "Require players to select a target before making any attack"
      },
      "enforceRangeChecking": {
        "name": "Enforce Range Checking",
        "hint": "Validate that attacks are within weapon range (melee: up to 2m/4m for long, ranged: up to 2x base range, thrown: contextual)"
      },
      "enforceMonsterActionPrevention": {
        "name": "Enable Monster Action Prevention",
        "hint": "Show confirmation dialogs before attempting parry or disarm actions against monsters (prevents invalid advancement and educates about rules)"
      },
      "enableShoveReminders": {
        "name": "OPTIONAL RULE: Enable Shove Rule Reminders",
        "hint": "Show shove rule reminders for melee special attacks when STR damage bonus allows it"
      },
      "enableDodgeMovementReminders": {
        "name": "Enable Dodge Movement Reminders",
        "hint": "Show movement reminders for successful EVADE rolls"
      },
      "debugMode": {
        "name": "Debug Mode",
        "hint": "Enable debug logging to console (for troubleshooting)"
      },
      "enableEncumbranceMonitoring": {
        "name": "Enable Encumbrance Monitoring",
        "hint": "Automatically monitor character encumbrance and apply status effects when over-encumbered"
      },
      "encumbranceMonitorFolder": {
        "name": "Encumbrance Monitor Folder",
        "hint": "Name of the actor folder to monitor for encumbrance. Monitors actors in the exact folder name specified. Leave blank to monitor all characters."
      },
      "encumbranceStatusEffect": {
        "name": "Encumbrance Status Effect",
        "hint": "Name of the status effect to apply when over-encumbered (will be created automatically with anchor icon if it doesn't exist)"
      },
      "encumbranceChatNotifications": {
        "name": "Encumbrance Chat Notifications",
        "hint": "Also create chat messages for encumbrance changes (in addition to UI notifications)"
      },
      "enableYZEIntegration": {
        "name": "Enable Year Zero Engine Integration",
        "hint": "Automatically apply single action status effects when Year Zero Engine Combat module is installed and single action mode is enabled"
      },
      "yzeCustomExclusions": {
        "name": "YZE Action Exclusions",
        "hint": "Additional words/phrases/UUIDs to exclude from action tracking (comma-separated). These dice rolls will not trigger action status effects. See README.md for some examples. Note: Reaction spells are automatically excluded by checking their casting time."
      },
      "enableGrudgeTracking": {
        "name": "Enable Unforgiving Tracker",
        "hint": "Automatically track damage dealt to Dwarf characters with Unforgiving kin ability. Creates journals for grudge lists."
      },
      "enableSpellValidation": {
        "name": "Enable Spell Range & Target Validation",
        "hint": "Enable target selection and range checking for spells (same rules as weapons). All spells get Automated Animations regardless of this setting."
      },
      "excludedSpells": {
        "name": "Excluded Spells",
        "hint": "Comma-separated list of spell names to exclude from validation (they will still get animations). Example: 'Birdsong, Custom Spell'"
      }
    },
    "actions": {
      "parry": "Parry",
      "topple": "Topple",
      "disarm": "Disarm",
      "weakspot": "Find Weak Spot"
    },
    "speakers": {
      "generic": "{action} Rules",
      "shove": "Shove Available",
      "evade": "Evade Movement"
    },
    "durability": "Durability",
    "unknownWeapon": "Unknown Weapon",
    "weaponTypes": {
      "melee": "melee weapon",
      "longMelee": "long melee weapon"
    },
    "range": {
      "upToTwoMeters": "within 2m of",
      "upToFourMeters": "within 4m of"
    },
    "validation": {
      "selectToken": "Please select your token before attacking with {weapon}.",
      "noWeapon": "You do not have the weapon {weapon}!",
      "noTarget": "Please target a token before attacking with {weapon}.",
      "tooManyTargets": "Please target only one token for {weapon}.",
      "meleeOutOfRange": "Target is too far away! {weapon} is a {weaponType} and must be {maxRange} the target, but target is {distance}m away.",
      "rangedOutOfRange": "Target is too far away! {weapon} has a maximum range of {maxRange}m, but target is {distance}m away.",
      "spellSelectToken": "You must select a token to cast {spell}",
      "spellNotFound": "Spell {spell} not found",
      "spellNoActor": "No actor found to cast {spell}",
      "spellNoToken": "No token found for {actor} to cast {spell}",
      "spellNoTarget": "You must select a target to cast {spell}",
      "spellTooManyTargets": "You must select exactly one target to cast {spell}",
      "spellCannotTargetSelf": "{spell} cannot target the caster! Select a different target.",
      "spellTouchRange": "{spell} requires touch! You must be adjacent (within 2m). Distance: {distance}m",
      "spellOutOfRange": "{spell} is out of range! Max: {maxRange}m, Distance: {distance}m"
    },
    "parry": {
      "reaction": "Parrying uses your action for the turn (reaction)",
      "success": "Success = no damage. If damage > durability, weapon damaged until repaired",
      "piercing": "Piercing attacks cannot damage parrying weapons/shields",
      "monster": "Monster attacks cannot be parried (unless specified)",
      "movement": "Success = move yourself and enemy 2m (doesn't count as movement, no free attacks)",
      "dragon": "Dragon = counterattack (cannot be dodged/parried). If attacker rolled Dragon, need Dragon to parry (no counterattack)",
      "dodgeMovement": "<strong>If Dodging:</strong> You may move up to 2m in any direction (no free attacks triggered)",
      "ifParrying": "If Parrying:"
    },
    "topple": {
      "noDamage": "No damage dealt",
      "evadeRoll": "Opponent makes opposed <strong>EVADE</strong> roll",
      "cannotDefend": "Cannot be dodged or parried",
      "success": "Success = opponent becomes prone",
      "weaponFeature": "Topple Feature",
      "boonBonus": "+1 Boon",
      "monsterRule": "<strong>Monster:</strong> 4 legs or more = bane on roll"
    },
    "disarm": {
      "noDamage": "No damage dealt",
      "skillRoll": "Opponent makes opposed weapon skill roll",
      "cannotDefend": "Cannot be dodged or parried",
      "twoHanded": "Two-handed weapon = you get bane",
      "success": "Success = weapon lands D6 meters away (your choice of direction)",
      "limitations": "Cannot disarm shields or natural weapons"
    },
    "weakspot": {
      "piercing": "Piercing weapons only: Target gaps in armor",
      "bane": "You get bane on attack",
      "success": "Success = enemy counts as armorless"
    },
    "shove": {
      "available": "<strong>Bonus:</strong> STR advantage allows shoving {targetName} 2m in any direction.",
      "defaultTarget": "target"
    },
    "evade": {
      "movementAvailable": "<strong>If Dodging:</strong> You may move up to 2m in any direction (no free attacks triggered)"
    },
    "weaponBroken": {
      "buttonText": "Mark Weapon Broken",
      "buttonTextCompleted": "Weapon Marked Broken",
      "dialogTitle": "Mark Weapon Broken",
      "dialogContent": "Mark <strong>{weaponName}</strong> as broken?",
      "dialogExplanation": "This will prevent its use until repaired.",
      "confirmButton": "Mark Broken",
      "cancelButton": "Cancel",
      "errors": {
        "actorNotFound": "Actor not found",
        "weaponNotFound": "Weapon not found",
        "noPermission": "You don't have permission to modify this weapon",
        "alreadyBroken": "{weaponName} is already broken",
        "updateFailed": "Failed to mark weapon as broken"
      },
      "success": "{weaponName} has been marked as broken"
    },
    "encumbrance": {
      "statusEffectName": "Over-Encumbered",
      "nowOverEncumbered": "{actorName} is now over-encumbered ({currentEnc}/{maxEnc} items)",
      "noLongerOverEncumbered": "{actorName} is no longer over-encumbered ({currentEnc}/{maxEnc} items)",
      "chatOverEncumbered": "<strong>{actorName}</strong> is now <strong>over-encumbered!</strong>",
      "chatNoLongerOverEncumbered": "<strong>{actorName}</strong> is no longer over-encumbered.",
      "carryingItems": "Carrying {currentEnc}/{maxEnc} items",
      "strRollReminder": "Must make STR rolls to move in combat or during travel shifts while over-encumbered.",
      "systemMessage": "Encumbrance Monitor"
    },
    "overrides": {
      "targetEnforcementDisabled": "Target selection enforcement disabled",
      "targetEnforcementEnabled": "Target selection enforcement enabled",
      "rangeCheckingDisabled": "Range checking disabled",
      "rangeCheckingEnabled": "Range checking enabled",
      "yzeActionTrackingDisabled": "YZE action tracking disabled",
      "yzeActionTrackingEnabled": "YZE action tracking enabled",
      "allValidationDisabled": "All validation rules and action tracking disabled",
      "allValidationEnabled": "All validation rules and action tracking enabled",
      "allOverridesCleared": "All validation and tracking overrides cleared",
      "status": {
        "targetSelection": "Target Selection",
        "rangeChecking": "Range Checking",
        "yzeActionTracking": "YZE Action Tracking",
        "allValidations": "All Validations",
        "allActive": "All validation rules active (no overrides)",
        "activeOverrides": "Active overrides: {overrides}"
      }
    },
    "yze": {
      "actionAlreadyPerformedOrPushing": "An action has already been performed by {actorName} or they are pushing a roll.",
      "actionAlreadyPerformedNPC": "{actorName} has used all of their available actions."
    },
    "monsterPrevention": {
      "disarm": {
        "title": "Disarm Monster",
        "content": "Monsters cannot be disarmed. Are you sure you want to attempt this disarm against the {targetName}?"
      },
      "parry": {
        "title": "Parry Monster Attack",
        "content": "Monster attacks generally cannot be parried (unless the attack specifically allows it). Are you sure you want to attempt this parry against the {targetName}?"
      },
      "proceed": "Proceed",
      "cancel": "Cancel"
    },
    "grudgeTracker": {
      "speakerName": "Unforgiving Tracker",
      "damageReceived": "{actorName} has taken {damage} damage from {attackerName}.",
      "addToGrudgeList": "Add to Grudge List",
      "buttonTextCompleted": "Added to Grudge List",
      "deleteEntry": "Delete this grudge entry",
      "entryDeleted": "Grudge entry deleted",
      "journalName": "{actorName}'s Grudges",
      "folderName": "Unforgiving Tracker",
      "pageTitle": "Unforgiving Tracker",
      "dateColumn": "Date",
      "enemyColumn": "Enemy",
      "damageColumn": "Damage",
      "locationColumn": "Location",
      "unknownLocation": "Unknown Location",
      "addedToGrudgeList": "{attackerName} added to {actorName}'s grudge list",
      "confirmDelete": {
        "title": "Delete Grudge Entry",
        "content": "Are you sure you want to delete this grudge entry? This action cannot be undone.",
        "confirm": "Delete",
        "cancel": "Cancel"
      },
      "errors": {
        "actorNotFound": "Actor not found",
        "noPermission": "You don't have permission to modify this character's grudge list",
        "addFailed": "Failed to add entry to grudge list",
        "journalCreateFailed": "Failed to create grudge list journal",
        "journalNotFound": "Grudge journal not found",
        "deleteFailed": "Failed to delete grudge entry"
      }
    }
  }
}
